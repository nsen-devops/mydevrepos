systemctl start etcd
etcdctl mkdir /kube-centos/network
etcdctl mk /kube-centos/network/config "{ \"Network\": \"172.30.0.0/16\", \"SubnetLen\": 24, \"Backend\": { \"Type\": \"vxlan\" } }"




kubectl config set-cluster default-cluster --server=http://kube-master:8080
kubectl config set-context default-context --cluster=default-cluster --user=default-admin
kubectl config use-context default-context

#kubectl cordon kube-node-x ###mark node as unscheduable
#kubectl drain kube-node-x ###drain out node in preparation for maintenance
#kubectl uncordon kube-node-x
#kubectl top node kube-node-x ###show metric for a node
#kubectl cluster-info ###display address of the master and services
#kubectl cluster-info dump ##dump current cluster state to stdout


[root@master ~]# kubectl run nginx-lab-cli --image=nginx --port 80 --replicas=2
deployment "nginx-lab-cli" created

[root@master ~]# kubectl get pods
NAME                            READY     STATUS              RESTARTS   AGE
nginx-lab-cli-634175304-lw4v7   0/1       ContainerCreating   0          42s
nginx-lab-cli-634175304-vgbpv   0/1       ContainerCreating   0          42s
[root@master ~]#
[root@master ~]#
[root@master ~]#


vi ngnix.demp.yaml
---
apiVersion: v1
kind: Pod
metadata:
 name: ngnix.demo.yaml
 labels:
   app: ngnix-web
spec:
  containers:
    - name: nginx.demo.yaml
      image: nginx
      ports:
 
      -containerPort: 80	


for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler flanneld; do
    
    systemctl status $SERVICES
done


for SERVICES in kube-proxy kubelet flanneld docker; do
   
    systemctl status $SERVICES
done


Start ETCD and configure it to hold the network overlay configuration on master: Warning This network must be unused in your network infrastructure! 172.30.0.0/16 is free in our network



#systemctl status etcd
#systemctl start etcd
#systemctl status etcd
#etcdctl mkdir /kube-centos/network
#ls -ld /kube-centos/network
#etcdctl mk /kube-centos/network/config "{ \"Network\": \"172.30.0.0/16\", \"SubnetLen\": 24, \"Backend\": { \"Type\": \"vxlan\"
} }"


#kubectl config set-cluster default-cluster --server=http://centos-master:8080
#kubectl config set-context default-context --cluster=default-cluster --user=default-admin
#kubectl config use-context default-context

Get list of all Pods:
#kubectl get Pods
#kubectl get pods -o wide

Get detail about the Pod
#kubectl describe pods NAME
Get Pod detail in json format
#kubectl get pods -o json NAME
Delete a pod
#kubectl delete pod NAME

Delete all pods 
#kubectl delete pods --all

Delete pod if in yamal file
#kubectl delete -f Yamal_file

kubectl create -f nginx_service.yaml
