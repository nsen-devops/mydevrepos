Commands use in Vagrant:
# vagrant init            ----------------- to intialize the Vagrantfile.
# cat Vagrantfile  -------------------  ( Add the below configuration to create two virtual machine ).
# vagrant up <virtual machine name>   -----------  To start the virtual machine.     
# vagrant reload  <virtual machine name>     -------------------    To apply the new changes as per config file (this command will restart your machine).
# vagrant halt  <virtual machine name>         ----------  To stop the vagrant machine.
# vagrant suspend  ------------- suspends the virtual machine  
# vagrant resume   -------------- To resume a suspended vagrant machine

##################vagrantfile#####################

:~/vagrant-ubantu# cat Vagrantfile

Vagrant.configure("2") do |config|
  config.vm.define "vm1" do |vm1|
    vm1.vm.box = "centos/7"
    vm1.vm.hostname = 'vm1'
  #  vm1.vm.box_url = "centos/7"

    vm1.vm.network :private_network, ip: "192.168.88.101"
    vm1.vm.network :forwarded_port, guest: 10, host: 8090
    vm1.vm.provider :virtualbox do |v|
#      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
#      v.customize ["modifyvm", :id, "--name", "vm1"]
    end
  end

  config.vm.define "vm2" do |vm2|
    vm2.vm.box = "centos/7"
    vm2.vm.hostname = 'vm2'
#    vm2.vm.box_url = "centos/7"

    vm2.vm.network :private_network, ip: "192.168.88.70"
    vm2.vm.network :forwarded_port, guest: 20, host: 9090
    vm2.vm.provider :virtualbox do |v|
#      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
#      v.customize ["modifyvm", :id, "--name", "vm2"]
    end
  end
end

:~/vagrant-ubantu# 

